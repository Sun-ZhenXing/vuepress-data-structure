import{_ as r,M as a,p as m,q as u,N as t,V as e,R as s,t as n,a1 as h}from"./framework-35149b8f.js";const k={},d=s("h1",{id:"素数筛法",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#素数筛法","aria-hidden":"true"},"#"),n(" 素数筛法")],-1),g=s("p",null,[n("如何计算不大于 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"n")]),s("annotation",{encoding:"application/x-tex"},"n")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal"},"n")])])]),n(" 的素数个数？暴力法是对每个数进行质数检验，这种方法不能得到最好的复杂度。"),s("sup",{class:"footnote-ref"},[s("a",{href:"#footnote1"},"[1]"),s("a",{class:"footnote-anchor",id:"footnote-ref1"})])],-1),b=s("h2",{id:"_1-暴力筛法",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_1-暴力筛法","aria-hidden":"true"},"#"),n(" 1. 暴力筛法")],-1),w=s("p",null,[n("枚举 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"1"),s("mo",null,"∼"),s("mi",null,"n")]),s("annotation",{encoding:"application/x-tex"},"1 \\sim n")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"1"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"∼"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal"},"n")])])]),n(" 中的每一个数，逐个判断。")],-1),x=s("p",null,[n("判断一个数是素数最坏的时间复杂度为 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",{mathvariant:"script"},"O"),s("mo",{stretchy:"false"},"("),s("msqrt",null,[s("mi",null,"n")]),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"\\mathcal{O}(\\sqrt{n})")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.0503em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathcal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord sqrt"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8003em"}},[s("span",{class:"svg-align",style:{top:"-3em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord",style:{"padding-left":"0.833em"}},[s("span",{class:"mord mathnormal"},"n")])]),s("span",{style:{top:"-2.7603em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"hide-tail",style:{"min-width":"0.853em",height:"1.08em"}},[s("svg",{xmlns:"http://www.w3.org/2000/svg",width:"400em",height:"1.08em",viewBox:"0 0 400000 1080",preserveAspectRatio:"xMinYMin slice"},[s("path",{d:`M95,702
c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14
c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54
c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10
s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429
c69,-144,104.5,-217.7,106.5,-221
l0 -0
c5.3,-9.3,12,-14,20,-14
H400000v40H845.2724
s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7
c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z
M834 80h400000v40h-400000z`})])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2397em"}},[s("span")])])])]),s("span",{class:"mclose"},")")])])]),n("，循环 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"n")]),s("annotation",{encoding:"application/x-tex"},"n")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal"},"n")])])]),n(" 次，时间复杂度 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",{mathvariant:"script"},"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mi",null,"log"),s("mo",null,"⁡"),s("mi",null,"n"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"\\mathcal{O}(n\\log n)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathcal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mop"},[n("lo"),s("span",{style:{"margin-right":"0.01389em"}},"g")]),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},")")])])]),n("，空间复杂度 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",{mathvariant:"script"},"O"),s("mo",{stretchy:"false"},"("),s("mn",null,"1"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"\\mathcal{O}(1)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathcal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord"},"1"),s("span",{class:"mclose"},")")])])]),n("。")],-1),y=s("p",null,"算法实现如下：",-1),v=s("div",{class:"language-cpp line-numbers-mode","data-ext":"cpp"},[s("pre",{class:"language-cpp"},[s("code",null,[s("span",{class:"token keyword"},"bool"),n(),s("span",{class:"token function"},"isPrime"),s("span",{class:"token punctuation"},"("),s("span",{class:"token keyword"},"int"),n(" n"),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token punctuation"},"{"),n(`
    `),s("span",{class:"token keyword"},"if"),n(),s("span",{class:"token punctuation"},"("),n("n "),s("span",{class:"token operator"},"<"),n(),s("span",{class:"token number"},"2"),s("span",{class:"token punctuation"},")"),n(`
        `),s("span",{class:"token keyword"},"return"),n(),s("span",{class:"token boolean"},"false"),s("span",{class:"token punctuation"},";"),n(`
    `),s("span",{class:"token keyword"},"for"),n(),s("span",{class:"token punctuation"},"("),s("span",{class:"token keyword"},"int"),n(" i "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token number"},"2"),s("span",{class:"token punctuation"},";"),n(" i "),s("span",{class:"token operator"},"*"),n(" i "),s("span",{class:"token operator"},"<="),n(" n"),s("span",{class:"token punctuation"},";"),n(),s("span",{class:"token operator"},"++"),n("i"),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token punctuation"},"{"),n(`
        `),s("span",{class:"token keyword"},"if"),n(),s("span",{class:"token punctuation"},"("),n("n "),s("span",{class:"token operator"},"%"),n(" i "),s("span",{class:"token operator"},"=="),n(),s("span",{class:"token number"},"0"),s("span",{class:"token punctuation"},")"),n(`
            `),s("span",{class:"token keyword"},"return"),n(),s("span",{class:"token boolean"},"false"),s("span",{class:"token punctuation"},";"),n(`
    `),s("span",{class:"token punctuation"},"}"),n(`
    `),s("span",{class:"token keyword"},"return"),n(),s("span",{class:"token boolean"},"true"),s("span",{class:"token punctuation"},";"),n(`
`),s("span",{class:"token punctuation"},"}"),n(`

`),s("span",{class:"token keyword"},"int"),n(),s("span",{class:"token function"},"countPrime"),s("span",{class:"token punctuation"},"("),s("span",{class:"token keyword"},"int"),n(" n"),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token punctuation"},"{"),n(`
    `),s("span",{class:"token keyword"},"int"),n(" res "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token number"},"0"),s("span",{class:"token punctuation"},";"),n(`
    `),s("span",{class:"token keyword"},"for"),n(),s("span",{class:"token punctuation"},"("),s("span",{class:"token keyword"},"int"),n(" j "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token number"},"2"),s("span",{class:"token punctuation"},";"),n(" j "),s("span",{class:"token operator"},"<="),n(" n"),s("span",{class:"token punctuation"},";"),n(),s("span",{class:"token operator"},"++"),n("j"),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token punctuation"},"{"),n(`
        `),s("span",{class:"token keyword"},"if"),n(),s("span",{class:"token punctuation"},"("),s("span",{class:"token function"},"isPrime"),s("span",{class:"token punctuation"},"("),n("j"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},")"),n(`
            `),s("span",{class:"token operator"},"++"),n("res"),s("span",{class:"token punctuation"},";"),n(`
    `),s("span",{class:"token punctuation"},"}"),n(`
    `),s("span",{class:"token keyword"},"return"),n(" res"),s("span",{class:"token punctuation"},";"),n(`
`),s("span",{class:"token punctuation"},"}"),n(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),_=s("div",{class:"language-python line-numbers-mode","data-ext":"py"},[s("pre",{class:"language-python"},[s("code",null,[s("span",{class:"token keyword"},"def"),n(),s("span",{class:"token function"},"is_prime"),s("span",{class:"token punctuation"},"("),n("n"),s("span",{class:"token punctuation"},":"),n(),s("span",{class:"token builtin"},"int"),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token operator"},"-"),s("span",{class:"token operator"},">"),n(),s("span",{class:"token builtin"},"bool"),s("span",{class:"token punctuation"},":"),n(`
    `),s("span",{class:"token keyword"},"if"),n(" n "),s("span",{class:"token operator"},"<"),n(),s("span",{class:"token number"},"2"),s("span",{class:"token punctuation"},":"),n(`
        `),s("span",{class:"token keyword"},"return"),n(),s("span",{class:"token boolean"},"False"),n(`
    i `),s("span",{class:"token operator"},"="),n(),s("span",{class:"token number"},"2"),n(`
    `),s("span",{class:"token keyword"},"while"),n(" i "),s("span",{class:"token operator"},"*"),n(" i "),s("span",{class:"token operator"},"<="),n(" n"),s("span",{class:"token punctuation"},":"),n(`
        `),s("span",{class:"token keyword"},"if"),n(" n "),s("span",{class:"token operator"},"%"),n(" i "),s("span",{class:"token operator"},"=="),n(),s("span",{class:"token number"},"0"),s("span",{class:"token punctuation"},":"),n(`
            `),s("span",{class:"token keyword"},"return"),n(),s("span",{class:"token boolean"},"False"),n(`
        i `),s("span",{class:"token operator"},"+="),n(),s("span",{class:"token number"},"1"),n(`
    `),s("span",{class:"token keyword"},"return"),n(),s("span",{class:"token boolean"},"True"),n(`

`),s("span",{class:"token keyword"},"def"),n(),s("span",{class:"token function"},"count_prime"),s("span",{class:"token punctuation"},"("),n("n"),s("span",{class:"token punctuation"},":"),n(),s("span",{class:"token builtin"},"int"),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token operator"},"-"),s("span",{class:"token operator"},">"),n(),s("span",{class:"token builtin"},"int"),s("span",{class:"token punctuation"},":"),n(`
    res `),s("span",{class:"token operator"},"="),n(),s("span",{class:"token number"},"0"),n(`
    `),s("span",{class:"token keyword"},"for"),n(" i "),s("span",{class:"token keyword"},"in"),n(),s("span",{class:"token builtin"},"range"),s("span",{class:"token punctuation"},"("),s("span",{class:"token number"},"2"),s("span",{class:"token punctuation"},","),n(" n"),s("span",{class:"token operator"},"+"),s("span",{class:"token number"},"1"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},":"),n(`
        `),s("span",{class:"token keyword"},"if"),n(" is_prime"),s("span",{class:"token punctuation"},"("),n("i"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},":"),n(`
            res `),s("span",{class:"token operator"},"+="),n(),s("span",{class:"token number"},"1"),n(`
    `),s("span",{class:"token keyword"},"return"),n(` res
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),f=s("h2",{id:"_2-埃拉托斯特尼筛法",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_2-埃拉托斯特尼筛法","aria-hidden":"true"},"#"),n(" 2. 埃拉托斯特尼筛法")],-1),M=s("p",null,[n("考虑一个事实：如果 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"x")]),s("annotation",{encoding:"application/x-tex"},"x")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal"},"x")])])]),n(" 是合数，那么 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"x")]),s("annotation",{encoding:"application/x-tex"},"x")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal"},"x")])])]),n(" 的倍数也一定是合数。利用这个结论，我们可以避免很多次不必要的检测。")],-1),O=s("p",null,"如果我们从小到大考虑每个数，然后同时把当前这个数的所有（比自己大的）倍数记为合数，那么运行结束的时候没有被标记的数就是素数了。",-1),L=s("p",null,[n("以上思路即为 "),s("strong",null,"Eratosthenes 筛法"),n("（"),s("strong",null,"埃拉托斯特尼筛法"),n("，简称 "),s("strong",null,"埃氏筛法"),n("）。")],-1),N=s("p",null,[n("时间复杂度 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",{mathvariant:"script"},"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mi",null,"log"),s("mo",null,"⁡"),s("mi",null,"log"),s("mo",null,"⁡"),s("mi",null,"n"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"\\mathcal{O}(n\\log \\log n)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathcal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mop"},[n("lo"),s("span",{style:{"margin-right":"0.01389em"}},"g")]),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mop"},[n("lo"),s("span",{style:{"margin-right":"0.01389em"}},"g")]),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},")")])])]),n("。")],-1),V=h('<p>提高埃筛法效率的几种方法</p><ol><li>筛至平方根</li><li>只筛奇数</li><li>位压缩</li><li>分块筛选</li></ol><h2 id="_2-欧拉筛法" tabindex="-1"><a class="header-anchor" href="#_2-欧拉筛法" aria-hidden="true">#</a> 2. 欧拉筛法</h2><p><strong>欧拉筛法</strong> 是一种线性筛法。与埃氏筛法相比，不会对已经被标记过的合数再进行重复标记，故效率更高。欧拉筛法将合数分解为最小质因数乘一个合数的形式，通过最小质因数来判断当前合数是否已经被标记过。</p><hr class="footnotes-sep">',5),j={class:"footnotes"},q={class:"footnotes-list"},B={id:"footnote1",class:"footnote-item"},C={href:"https://oi-wiki.org/math/number-theory/sieve/",target:"_blank",rel:"noopener noreferrer"},E=s("a",{href:"#footnote-ref1",class:"footnote-backref"},"↩︎",-1);function T(A,P){const l=a("CodeTabs"),o=a("ExternalLinkIcon");return m(),u("div",null,[d,g,b,w,x,y,t(l,{id:"18",data:[{title:"cpp"},{title:"python"}],"tab-id":"code"},{tab0:e(({title:c,value:i,isActive:p})=>[v]),tab1:e(({title:c,value:i,isActive:p})=>[_]),_:1}),f,M,O,L,N,V,s("section",j,[s("ol",q,[s("li",B,[s("p",null,[n("筛法，oi-wiki，"),s("a",C,[n("https://oi-wiki.org/math/number-theory/sieve/"),t(o)]),n(),E])])])])])}const F=r(k,[["render",T],["__file","prime-sieve-method.html.vue"]]);export{F as default};
