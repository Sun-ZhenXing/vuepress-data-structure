import{_ as u,M as r,p as m,q as d,N as a,V as o,R as s,t as n,a1 as t}from"./framework-35149b8f.js";const k={},h=t('<h1 id="二分算法" tabindex="-1"><a class="header-anchor" href="#二分算法" aria-hidden="true">#</a> 二分算法</h1><h2 id="_1-二分查找" tabindex="-1"><a class="header-anchor" href="#_1-二分查找" aria-hidden="true">#</a> 1. 二分查找</h2><p><strong>二分查找</strong>（Binary Search），也称折半搜索（Half-Interval Search）、对数搜索（Logarithmic Search），是用来在一个有序数组中查找某一元素的算法。<sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup></p>',3),g=s("p",null,[n("二分查找的最优时间复杂度为 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mn",null,"1"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(1)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord"},"1"),s("span",{class:"mclose"},")")])])]),n("。二分查找的平均、最坏时间复杂度均为 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"log"),s("mo",null,"⁡"),s("mi",null,"n"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(\\log n)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mop"},[n("lo"),s("span",{style:{"margin-right":"0.01389em"}},"g")]),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},")")])])]),n("。因为在二分搜索过程中，算法每次都把查询的区间减半，所以对于一个长度为 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"n")]),s("annotation",{encoding:"application/x-tex"},"n")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal"},"n")])])]),n(" 的数组，至多会进行 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"log"),s("mo",null,"⁡"),s("mi",null,"n"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(\\log n)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mop"},[n("lo"),s("span",{style:{"margin-right":"0.01389em"}},"g")]),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},")")])])]),n(" 次查找。")],-1),b=s("p",null,[n("迭代法空间复杂度为："),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mn",null,"1"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(1)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord"},"1"),s("span",{class:"mclose"},")")])])]),n("，而递归法为 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"log"),s("mo",null,"⁡"),s("mi",null,"n"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(\\log n)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mop"},[n("lo"),s("span",{style:{"margin-right":"0.01389em"}},"g")]),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},")")])])]),n("。")],-1),y=s("h2",{id:"_2-代码实现",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_2-代码实现","aria-hidden":"true"},"#"),n(" 2. 代码实现")],-1),v=s("p",null,[n("下面是基本二分查找，目标是在有序数组中快速找到这样一个数，搜索目标是闭区间 "),s("code",null,"[l, r]"),n("。")],-1),w=s("div",{class:"language-cpp line-numbers-mode","data-ext":"cpp"},[s("pre",{class:"language-cpp"},[s("code",null,[s("span",{class:"token keyword"},"int"),n(),s("span",{class:"token function"},"binary_search"),s("span",{class:"token punctuation"},"("),s("span",{class:"token keyword"},"int"),n(" arr"),s("span",{class:"token punctuation"},"["),s("span",{class:"token punctuation"},"]"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token keyword"},"int"),n(" n"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token keyword"},"int"),n(" target"),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token punctuation"},"{"),n(`
    `),s("span",{class:"token keyword"},"int"),n(" l "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token number"},"0"),s("span",{class:"token punctuation"},","),n(" r "),s("span",{class:"token operator"},"="),n(" n "),s("span",{class:"token operator"},"-"),n(),s("span",{class:"token number"},"1"),s("span",{class:"token punctuation"},";"),n(`
    `),s("span",{class:"token keyword"},"while"),n(),s("span",{class:"token punctuation"},"("),n("l "),s("span",{class:"token operator"},"<="),n(" r"),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token punctuation"},"{"),n(`
        `),s("span",{class:"token keyword"},"int"),n(" mid "),s("span",{class:"token operator"},"="),n(" l "),s("span",{class:"token operator"},"+"),n(),s("span",{class:"token punctuation"},"("),n("r "),s("span",{class:"token operator"},"-"),n(" l"),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token operator"},"/"),n(),s("span",{class:"token number"},"2"),s("span",{class:"token punctuation"},";"),n(`
        `),s("span",{class:"token keyword"},"if"),n(),s("span",{class:"token punctuation"},"("),n("arr"),s("span",{class:"token punctuation"},"["),n("mid"),s("span",{class:"token punctuation"},"]"),n(),s("span",{class:"token operator"},"<"),n(" target"),s("span",{class:"token punctuation"},")"),n(`
            l `),s("span",{class:"token operator"},"="),n(" mid "),s("span",{class:"token operator"},"+"),n(),s("span",{class:"token number"},"1"),s("span",{class:"token punctuation"},";"),n(`
        `),s("span",{class:"token keyword"},"else"),n(),s("span",{class:"token keyword"},"if"),n(),s("span",{class:"token punctuation"},"("),n("arr"),s("span",{class:"token punctuation"},"["),n("mid"),s("span",{class:"token punctuation"},"]"),n(),s("span",{class:"token operator"},">"),n(" target"),s("span",{class:"token punctuation"},")"),n(`
            r `),s("span",{class:"token operator"},"="),n(" mid "),s("span",{class:"token operator"},"-"),n(),s("span",{class:"token number"},"1"),s("span",{class:"token punctuation"},";"),n(`
        `),s("span",{class:"token keyword"},"else"),n(`
            `),s("span",{class:"token keyword"},"return"),n(" mid"),s("span",{class:"token punctuation"},";"),n(`
    `),s("span",{class:"token punctuation"},"}"),n(`
    `),s("span",{class:"token keyword"},"return"),n(),s("span",{class:"token operator"},"-"),s("span",{class:"token number"},"1"),s("span",{class:"token punctuation"},";"),n(`
`),s("span",{class:"token punctuation"},"}"),n(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),_=s("div",{class:"language-python line-numbers-mode","data-ext":"py"},[s("pre",{class:"language-python"},[s("code",null,[s("span",{class:"token keyword"},"def"),n(),s("span",{class:"token function"},"binary_search"),s("span",{class:"token punctuation"},"("),n("arr"),s("span",{class:"token punctuation"},":"),n(),s("span",{class:"token builtin"},"list"),s("span",{class:"token punctuation"},"["),s("span",{class:"token builtin"},"int"),s("span",{class:"token punctuation"},"]"),s("span",{class:"token punctuation"},","),n(" key"),s("span",{class:"token punctuation"},":"),n(),s("span",{class:"token builtin"},"int"),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token operator"},"-"),s("span",{class:"token operator"},">"),n(),s("span",{class:"token builtin"},"int"),s("span",{class:"token punctuation"},":"),n(`
    res `),s("span",{class:"token operator"},"="),n(),s("span",{class:"token operator"},"-"),s("span",{class:"token number"},"1"),n(`
    l `),s("span",{class:"token operator"},"="),n(),s("span",{class:"token number"},"0"),n(`
    r `),s("span",{class:"token operator"},"="),n(),s("span",{class:"token builtin"},"len"),s("span",{class:"token punctuation"},"("),n("arr"),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token operator"},"-"),n(),s("span",{class:"token number"},"1"),n(`
    `),s("span",{class:"token keyword"},"while"),n(" l "),s("span",{class:"token operator"},"<="),n(" r"),s("span",{class:"token punctuation"},":"),n(`
        mid `),s("span",{class:"token operator"},"="),n(" l "),s("span",{class:"token operator"},"+"),n(),s("span",{class:"token punctuation"},"("),n("r "),s("span",{class:"token operator"},"-"),n(" l"),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token operator"},"//"),n(),s("span",{class:"token number"},"2"),n(`
        `),s("span",{class:"token keyword"},"print"),s("span",{class:"token punctuation"},"("),n("mid"),s("span",{class:"token punctuation"},")"),n(`
        `),s("span",{class:"token keyword"},"if"),n(" arr"),s("span",{class:"token punctuation"},"["),n("mid"),s("span",{class:"token punctuation"},"]"),n(),s("span",{class:"token operator"},"<"),n(" key"),s("span",{class:"token punctuation"},":"),n(`
            l `),s("span",{class:"token operator"},"="),n(" mid "),s("span",{class:"token operator"},"+"),n(),s("span",{class:"token number"},"1"),n(`
        `),s("span",{class:"token keyword"},"elif"),n(" arr"),s("span",{class:"token punctuation"},"["),n("mid"),s("span",{class:"token punctuation"},"]"),n(),s("span",{class:"token operator"},">"),n(" key"),s("span",{class:"token punctuation"},":"),n(`
            r `),s("span",{class:"token operator"},"="),n(" mid "),s("span",{class:"token operator"},"-"),n(),s("span",{class:"token number"},"1"),n(`
        `),s("span",{class:"token keyword"},"else"),s("span",{class:"token punctuation"},":"),n(`
            res `),s("span",{class:"token operator"},"="),n(` mid
            `),s("span",{class:"token keyword"},"break"),n(`
    `),s("span",{class:"token keyword"},"return"),n(` res
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),f=t(`<div class="custom-container tip"><p class="custom-container-title">防止溢出</p><p>计算 <code>mid</code> 时需要防止溢出，代码中 <code>l + (r - l) / 2</code> 和 <code>(l + r) / 2</code> 的结果相同，但是有效防止了 <code>l</code> 和 <code>r</code> 太大直接相加导致溢出。</p><p>如果为了防止减法的溢出，更彻底的做法是使用位运算：</p><div class="language-cpp" data-ext="cpp"><pre class="language-cpp"><code>mid <span class="token operator">=</span> <span class="token punctuation">(</span>l <span class="token operator">&amp;</span> r<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>l <span class="token operator">^</span> r<span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div></div><p>下面还有几种需求，例如查找左边界和右边界。我们模仿 C++ STL 库进行实现，即 <code>lower_bound()</code> 和 <code>upper_bound()</code> 的基本实现：</p>`,2),x=s("div",{class:"language-cpp line-numbers-mode","data-ext":"cpp"},[s("pre",{class:"language-cpp"},[s("code",null,[s("span",{class:"token keyword"},"int"),n(),s("span",{class:"token function"},"lower_bound"),s("span",{class:"token punctuation"},"("),s("span",{class:"token keyword"},"int"),n(" arr"),s("span",{class:"token punctuation"},"["),s("span",{class:"token punctuation"},"]"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token keyword"},"int"),n(" n"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token keyword"},"int"),n(" target"),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token punctuation"},"{"),n(`
    `),s("span",{class:"token keyword"},"int"),n(" l "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token number"},"0"),s("span",{class:"token punctuation"},","),n(" r "),s("span",{class:"token operator"},"="),n(" n "),s("span",{class:"token operator"},"-"),n(),s("span",{class:"token number"},"1"),s("span",{class:"token punctuation"},";"),n(`
    `),s("span",{class:"token keyword"},"while"),n(),s("span",{class:"token punctuation"},"("),n("l "),s("span",{class:"token operator"},"<="),n(" r"),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token punctuation"},"{"),n(`
        `),s("span",{class:"token keyword"},"int"),n(" mid "),s("span",{class:"token operator"},"="),n(" l "),s("span",{class:"token operator"},"+"),n(),s("span",{class:"token punctuation"},"("),n("r "),s("span",{class:"token operator"},"-"),n(" l"),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token operator"},"/"),n(),s("span",{class:"token number"},"2"),s("span",{class:"token punctuation"},";"),n(`
        `),s("span",{class:"token keyword"},"if"),n(),s("span",{class:"token punctuation"},"("),n("arr"),s("span",{class:"token punctuation"},"["),n("mid"),s("span",{class:"token punctuation"},"]"),n(),s("span",{class:"token operator"},"<"),n(" target"),s("span",{class:"token punctuation"},")"),n(`
            l `),s("span",{class:"token operator"},"="),n(" mid "),s("span",{class:"token operator"},"+"),n(),s("span",{class:"token number"},"1"),s("span",{class:"token punctuation"},";"),n(`
        `),s("span",{class:"token keyword"},"else"),n(`
            r `),s("span",{class:"token operator"},"="),n(" mid "),s("span",{class:"token operator"},"-"),n(),s("span",{class:"token number"},"1"),s("span",{class:"token punctuation"},";"),n(`
    `),s("span",{class:"token punctuation"},"}"),n(`
    `),s("span",{class:"token keyword"},"if"),n(),s("span",{class:"token punctuation"},"("),n("l "),s("span",{class:"token operator"},"<"),n(" n "),s("span",{class:"token operator"},"&&"),n(" arr"),s("span",{class:"token punctuation"},"["),n("l"),s("span",{class:"token punctuation"},"]"),n(),s("span",{class:"token operator"},"=="),n(" target"),s("span",{class:"token punctuation"},")"),n(`
        `),s("span",{class:"token keyword"},"return"),n(" l"),s("span",{class:"token punctuation"},";"),n(`
    `),s("span",{class:"token keyword"},"return"),n(),s("span",{class:"token operator"},"-"),s("span",{class:"token number"},"1"),s("span",{class:"token punctuation"},";"),n(`
`),s("span",{class:"token punctuation"},"}"),n(`

`),s("span",{class:"token keyword"},"int"),n(),s("span",{class:"token function"},"upper_bound"),s("span",{class:"token punctuation"},"("),s("span",{class:"token keyword"},"int"),n(" arr"),s("span",{class:"token punctuation"},"["),s("span",{class:"token punctuation"},"]"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token keyword"},"int"),n(" n"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token keyword"},"int"),n(" target"),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token punctuation"},"{"),n(`
    `),s("span",{class:"token keyword"},"int"),n(" l "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token number"},"0"),s("span",{class:"token punctuation"},","),n(" r "),s("span",{class:"token operator"},"="),n(" n "),s("span",{class:"token operator"},"-"),n(),s("span",{class:"token number"},"1"),s("span",{class:"token punctuation"},";"),n(`
    `),s("span",{class:"token keyword"},"while"),n(),s("span",{class:"token punctuation"},"("),n("l "),s("span",{class:"token operator"},"<="),n(" r"),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token punctuation"},"{"),n(`
        `),s("span",{class:"token keyword"},"int"),n(" mid "),s("span",{class:"token operator"},"="),n(" l "),s("span",{class:"token operator"},"+"),n(),s("span",{class:"token punctuation"},"("),n("r "),s("span",{class:"token operator"},"-"),n(" l"),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token operator"},"/"),n(),s("span",{class:"token number"},"2"),s("span",{class:"token punctuation"},";"),n(`
        `),s("span",{class:"token keyword"},"if"),n(),s("span",{class:"token punctuation"},"("),n("arr"),s("span",{class:"token punctuation"},"["),n("mid"),s("span",{class:"token punctuation"},"]"),n(),s("span",{class:"token operator"},"<="),n(" target"),s("span",{class:"token punctuation"},")"),n(`
            l `),s("span",{class:"token operator"},"="),n(" mid "),s("span",{class:"token operator"},"+"),n(),s("span",{class:"token number"},"1"),s("span",{class:"token punctuation"},";"),n(`
        `),s("span",{class:"token keyword"},"else"),n(`
            r `),s("span",{class:"token operator"},"="),n(" mid "),s("span",{class:"token operator"},"-"),n(),s("span",{class:"token number"},"1"),s("span",{class:"token punctuation"},";"),n(`
    `),s("span",{class:"token punctuation"},"}"),n(`
    `),s("span",{class:"token keyword"},"if"),n(),s("span",{class:"token punctuation"},"("),n("r "),s("span",{class:"token operator"},">="),n(),s("span",{class:"token number"},"0"),n(),s("span",{class:"token operator"},"&&"),n(" arr"),s("span",{class:"token punctuation"},"["),n("r"),s("span",{class:"token punctuation"},"]"),n(),s("span",{class:"token operator"},"=="),n(" target"),s("span",{class:"token punctuation"},")"),n(`
        `),s("span",{class:"token keyword"},"return"),n(" r"),s("span",{class:"token punctuation"},";"),n(`
    `),s("span",{class:"token keyword"},"return"),n(),s("span",{class:"token operator"},"-"),s("span",{class:"token number"},"1"),s("span",{class:"token punctuation"},";"),n(`
`),s("span",{class:"token punctuation"},"}"),n(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),M=t('<h2 id="_3-标准库实现" tabindex="-1"><a class="header-anchor" href="#_3-标准库实现" aria-hidden="true">#</a> 3. 标准库实现</h2><h3 id="_3-1-c-stl-实现" tabindex="-1"><a class="header-anchor" href="#_3-1-c-stl-实现" aria-hidden="true">#</a> 3.1 C++ STL 实现</h3><p>C++ 标准库中实现了查找首个不小于给定值的元素的函数 <code>std::lower_bound()</code> 和查找首个大于给定值的元素的函数 <code>std::upper_bound()</code>，二者均定义于头文件 <code>&lt;algorithm&gt;</code> 中。</p><h3 id="_3-2-c-语言" tabindex="-1"><a class="header-anchor" href="#_3-2-c-语言" aria-hidden="true">#</a> 3.2 C 语言</h3><p>C 语言标准库中有二分算法的实现 <code>bsearch()</code>，定义在 <code>&lt;stdlib.h&gt;</code> 中。</p><p>注意：<code>bsearch()</code> 与 <code>std::lower_bound()</code> 和 <code>std::upper_bound()</code> 有两点不同：</p><ul><li>当符合条件的元素有重复多个的时候，会返回执行二分查找时第一个符合条件的元素，从而这个元素可能位于重复多个元素的中间部分</li><li>当查找不到相应的元素时，会返回 <code>NULL</code></li></ul><h3 id="_3-3-python" tabindex="-1"><a class="header-anchor" href="#_3-3-python" aria-hidden="true">#</a> 3.3 Python</h3><p>标准库 <code>bisect</code> 包含 4 个函数</p><ol><li><code>bisect.bisect_left</code>：返回插入 <code>x</code> 的位置，最左插入</li><li><code>bisect.bisect_right</code>：返回插入 <code>x</code> 的位置，最右插入</li><li><code>bisect.insort_left</code>：插入 <code>x</code> 到列表中，最左插入</li><li><code>bisect.insort_right</code>：插入 <code>x</code> 到列表中，最右插入</li></ol><p>另外，还有两个别名</p><ol><li><code>bisect = bisect_right</code></li><li><code>insort = insort_right</code></li></ol><p>也就是说，默认情况下可以选择最右插入。</p><h2 id="_4-二分答案" tabindex="-1"><a class="header-anchor" href="#_4-二分答案" aria-hidden="true">#</a> 4. 二分答案</h2><p>解题的时候往往会考虑枚举答案然后检验枚举的值是否正确。若满足单调性，则满足使用二分法的条件。把这里的枚举换成二分，就变成了 “二分答案”。</p>',15),L={class:"custom-container info"},O=s("p",{class:"custom-container-title"},"例题",-1),z={href:"https://www.luogu.com.cn/problem/P1873",target:"_blank",rel:"noopener noreferrer"},C=s("h2",{id:"_5-分数规划",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_5-分数规划","aria-hidden":"true"},"#"),n(" 5. 分数规划")],-1),N={href:"https://oi-wiki.org/misc/frac-programming/",target:"_blank",rel:"noopener noreferrer"},S=s("p",null,[n("分数规划通常描述为下列问题：每个物品有两个属性 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"c"),s("mi",null,"i")]),s("mo",{separator:"true"},","),s("mtext",null," "),s("msub",null,[s("mi",null,"d"),s("mi",null,"i")])]),s("annotation",{encoding:"application/x-tex"},"c_i,\\,d_i")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"c"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3117em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"i")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"d"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3117em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"i")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),n(" ，要求通过某种方式选出若干个物品，使得 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mstyle",{displaystyle:"true",scriptlevel:"0"},[s("mfrac",null,[s("mrow",null,[s("mo",null,"∑"),s("msub",null,[s("mi",null,"c"),s("mi",null,"i")])]),s("mrow",null,[s("mo",null,"∑"),s("msub",null,[s("mi",null,"d"),s("mi",null,"i")])])])])]),s("annotation",{encoding:"application/x-tex"},"\\dfrac{\\sum c_i}{\\sum d_i}")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"2.363em","vertical-align":"-0.936em"}}),s("span",{class:"mord"},[s("span",{class:"mopen nulldelimiter"}),s("span",{class:"mfrac"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.427em"}},[s("span",{style:{top:"-2.314em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mop op-symbol small-op",style:{position:"relative",top:"0em"}},"∑"),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"d"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3117em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"i")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])]),s("span",{style:{top:"-3.23em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"frac-line",style:{"border-bottom-width":"0.04em"}})]),s("span",{style:{top:"-3.677em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mop op-symbol small-op",style:{position:"relative",top:"0em"}},"∑"),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"c"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3117em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"i")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.936em"}},[s("span")])])])]),s("span",{class:"mclose nulldelimiter"})])])])]),n(" 最大或最小。")],-1),T=t(`<p>经典的例子有最优比率环、最优比率生成树等等。分数规划可以用二分法来解决。</p><h2 id="_6-三分法" tabindex="-1"><a class="header-anchor" href="#_6-三分法" aria-hidden="true">#</a> 6. 三分法</h2><p>三分法可以用来查找凸函数的最大（小）值。</p><ul><li>如果 <code>lmid</code> 和 <code>rmid</code> 在最大（小）值的同一侧 <ul><li>由于单调性，一定是二者中较大（小）的那个离最值近一些</li><li>较远的那个点对应的区间不可能包含最值，所以可以舍弃</li></ul></li><li>如果在两侧 <ul><li>由于最值在二者中间，我们舍弃两侧的一个区间后，也不会影响最值，所以可以舍弃</li></ul></li></ul><div class="language-cpp" data-ext="cpp"><pre class="language-cpp"><code>lmid <span class="token operator">=</span> left <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>right <span class="token operator">-</span> left<span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
rmid <span class="token operator">=</span> lmid <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>right <span class="token operator">-</span> lmid<span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">cal</span><span class="token punctuation">(</span>lmid<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token function">cal</span><span class="token punctuation">(</span>rmid<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    right <span class="token operator">=</span> rmid<span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    left <span class="token operator">=</span> lmid<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><hr class="footnotes-sep">`,6),V={class:"footnotes"},A={class:"footnotes-list"},B={id:"footnote1",class:"footnote-item"},E={href:"https://oi-wiki.org/basic/binary/",target:"_blank",rel:"noopener noreferrer"},I=s("a",{href:"#footnote-ref1",class:"footnote-backref"},"↩︎",-1);function P(q,H){const l=r("CodeTabs"),e=r("ExternalLinkIcon");return m(),d("div",null,[h,g,b,y,v,a(l,{id:"21",data:[{title:"cpp"},{title:"python"}],"tab-id":"code"},{tab0:o(({title:c,value:p,isActive:i})=>[w]),tab1:o(({title:c,value:p,isActive:i})=>[_]),_:1}),f,a(l,{id:"41",data:[{title:"cpp"}],"tab-id":"code"},{tab0:o(({title:c,value:p,isActive:i})=>[x]),_:1}),M,s("div",L,[O,s("p",null,[n("参考 "),s("a",z,[n("Luogu P1873 砍树"),a(e)])])]),C,s("p",null,[n("请参考 "),s("a",N,[n("分数规划"),a(e)]),n("。")]),S,T,s("section",V,[s("ol",A,[s("li",B,[s("p",null,[n("oi-wiki，二分，"),s("a",E,[n("https://oi-wiki.org/basic/binary/"),a(e)]),n(),I])])])])])}const U=u(k,[["render",P],["__file","binary-algorithm.html.vue"]]);export{U as default};
