import{_ as p,M as o,p as c,q as i,R as n,N as e,V as t,t as s,a1 as l}from"./framework-8980b429.js";const u={},d=n("h1",{id:"数组优化",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#数组优化","aria-hidden":"true"},"#"),s(" 数组优化")],-1),r={class:"table-of-contents"},k=l(`<h2 id="_1-c-数组初始化" tabindex="-1"><a class="header-anchor" href="#_1-c-数组初始化" aria-hidden="true">#</a> 1. C++ 数组初始化</h2><p>C++ 数组初始化，对于不同类型的数组，可以使用 <code>memset()</code> 来初始化。</p><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstring&gt;</span></span>

<span class="token keyword">int</span> a<span class="token punctuation">[</span><span class="token number">10001</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">double</span> d<span class="token punctuation">[</span><span class="token number">10001</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 初始化为 0</span>
    <span class="token function">memset</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 初始化为很大的数（0x7f7f7f7f = 2139062143）</span>
    <span class="token function">memset</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token number">0x7f</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 初始化为很小的数（0xafafafaf = -1347440721）</span>
    <span class="token function">memset</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token number">0xaf</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 初始化为 0</span>
    <span class="token function">memset</span><span class="token punctuation">(</span>d<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 初始化为很大的数（1.38242e+306）</span>
    <span class="token function">memset</span><span class="token punctuation">(</span>d<span class="token punctuation">,</span> <span class="token number">0x7f</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-python-数组初始化" tabindex="-1"><a class="header-anchor" href="#_2-python-数组初始化" aria-hidden="true">#</a> 2. Python 数组初始化</h2><p>Python 的数组比较灵活，可以初始化为任何值。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>n <span class="token operator">=</span> <span class="token number">100003</span>
m <span class="token operator">=</span> <span class="token number">100</span>

<span class="token comment"># 初始化一个一维数组</span>
a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> n

<span class="token comment"># 初始化一个二维数组</span>
a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> n <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">]</span>

<span class="token comment"># 初始化为 inf</span>
a <span class="token operator">=</span> <span class="token punctuation">[</span>inf<span class="token punctuation">]</span> <span class="token operator">*</span> n
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6);function m(v,b){const a=o("router-link");return c(),i("div",null,[d,n("nav",r,[n("ul",null,[n("li",null,[e(a,{to:"#_1-c-数组初始化"},{default:t(()=>[s("1. C++ 数组初始化")]),_:1})]),n("li",null,[e(a,{to:"#_2-python-数组初始化"},{default:t(()=>[s("2. Python 数组初始化")]),_:1})])])]),k])}const h=p(u,[["render",m],["__file","array.html.vue"]]);export{h as default};
