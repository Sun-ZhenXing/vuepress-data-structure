import{_ as u,M as i,p as k,q as r,N as e,V as s,R as n,t as a,a1 as l}from"./framework-bafc524a.js";const d={},m=n("h1",{id:"完全背包",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#完全背包","aria-hidden":"true"},"#"),a(" 完全背包")],-1),h=n("h2",{id:"_1-完全背包定义",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-完全背包定义","aria-hidden":"true"},"#"),a(" 1. 完全背包定义")],-1),w=n("p",null,[a("完全背包指的是，有 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"n")]),n("annotation",{encoding:"application/x-tex"},"n")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.4306em"}}),n("span",{class:"mord mathnormal"},"n")])])]),a(" 件物品和一个最多能承受重量为 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"w")]),n("annotation",{encoding:"application/x-tex"},"w")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.4306em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02691em"}},"w")])])]),a(" 的背包，第 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"i")]),n("annotation",{encoding:"application/x-tex"},"i")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6595em"}}),n("span",{class:"mord mathnormal"},"i")])])]),a(" 件物品的重量是 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mrow",null,[n("mi",{mathvariant:"normal"},"w"),n("mi",{mathvariant:"normal"},"e"),n("mi",{mathvariant:"normal"},"i"),n("mi",{mathvariant:"normal"},"g"),n("mi",{mathvariant:"normal"},"h"),n("mi",{mathvariant:"normal"},"t")]),n("mo",{stretchy:"false"},"["),n("mi",null,"i"),n("mo",{stretchy:"false"},"]")]),n("annotation",{encoding:"application/x-tex"},"\\mathrm{weight}[i]")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord"},[n("span",{class:"mord mathrm"},"weight")]),n("span",{class:"mopen"},"["),n("span",{class:"mord mathnormal"},"i"),n("span",{class:"mclose"},"]")])])]),a("，其价值是 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mrow",null,[n("mi",{mathvariant:"normal"},"v"),n("mi",{mathvariant:"normal"},"a"),n("mi",{mathvariant:"normal"},"l"),n("mi",{mathvariant:"normal"},"u"),n("mi",{mathvariant:"normal"},"e")]),n("mo",{stretchy:"false"},"["),n("mi",null,"i"),n("mo",{stretchy:"false"},"]")]),n("annotation",{encoding:"application/x-tex"},"\\mathrm{value}[i]")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord"},[n("span",{class:"mord mathrm"},"value")]),n("span",{class:"mopen"},"["),n("span",{class:"mord mathnormal"},"i"),n("span",{class:"mclose"},"]")])])]),a("，每件物品可以使用无限次，求解哪些物品装入背包后可以使物品价值总和最大（"),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"i")]),n("annotation",{encoding:"application/x-tex"},"i")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6595em"}}),n("span",{class:"mord mathnormal"},"i")])])]),a(" 从 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mn",null,"1")]),n("annotation",{encoding:"application/x-tex"},"1")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6444em"}}),n("span",{class:"mord"},"1")])])]),a(" 开始）。")],-1),g=l(`<p>完全背包和 0-1 背包在未使用滚动数组时很相似，只不过遍历背包大小时必须要正序遍历。</p><div class="hint-container tip"><p class="hint-container-title">遍历方式对比</p><p>0-1 背包：</p><div class="language-cpp" data-ext="cpp"><pre class="language-cpp"><code>dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">max</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">-</span> weight<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">+</span> value<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre></div><p>完全背包：</p><div class="language-cpp" data-ext="cpp"><pre class="language-cpp"><code>dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">max</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">-</span> weight<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">+</span> value<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre></div></div><p>注意到：完全背包的项是 <code>dp[i][j - weight[i]] + value[i]</code>，这是因为这个项是从可能已经选择了这个物品这个状态推导出来的，而 <code>dp[i - 1][j - weight[i]] + value[i]</code> 则是不可能选择这个物品的状态。根据表达式，在遍历时必须正序遍历。</p><p>二维数组版本：</p>`,4),x=n("div",{class:"language-cpp","data-ext":"cpp"},[n("pre",{class:"language-cpp"},[n("code",null,[n("span",{class:"token keyword"},"for"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),a(" i "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),a(" i "),n("span",{class:"token operator"},"<="),a(" n"),n("span",{class:"token punctuation"},";"),a(" i"),n("span",{class:"token operator"},"++"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token keyword"},"for"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),a(" j "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),a(" j "),n("span",{class:"token operator"},"<="),a(" w"),n("span",{class:"token punctuation"},";"),a(" j"),n("span",{class:"token operator"},"++"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
        `),n("span",{class:"token keyword"},"if"),a(),n("span",{class:"token punctuation"},"("),a("j "),n("span",{class:"token operator"},">="),a(" weight"),n("span",{class:"token punctuation"},"["),a("i"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
            dp`),n("span",{class:"token punctuation"},"["),a("i"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"["),a("j"),n("span",{class:"token punctuation"},"]"),a(),n("span",{class:"token operator"},"="),a(),n("span",{class:"token function"},"max"),n("span",{class:"token punctuation"},"("),a("dp"),n("span",{class:"token punctuation"},"["),a("i "),n("span",{class:"token operator"},"-"),a(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"["),a("j"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),a(" dp"),n("span",{class:"token punctuation"},"["),a("i"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"["),a("j "),n("span",{class:"token operator"},"-"),a(" weight"),n("span",{class:"token punctuation"},"["),a("i"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"]"),a(),n("span",{class:"token operator"},"+"),a(" value"),n("span",{class:"token punctuation"},"["),a("i"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
        `),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token keyword"},"else"),a(),n("span",{class:"token punctuation"},"{"),a(`
            dp`),n("span",{class:"token punctuation"},"["),a("i"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"["),a("j"),n("span",{class:"token punctuation"},"]"),a(),n("span",{class:"token operator"},"="),a(" dp"),n("span",{class:"token punctuation"},"["),a("i "),n("span",{class:"token operator"},"-"),a(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"["),a("j"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),a(`
        `),n("span",{class:"token punctuation"},"}"),a(`
    `),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`
`)])])],-1),b=n("div",{class:"language-python","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[a("dp "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},"]"),a(),n("span",{class:"token operator"},"*"),a(),n("span",{class:"token punctuation"},"("),a("w "),n("span",{class:"token operator"},"+"),a(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token keyword"},"for"),a(" _ "),n("span",{class:"token keyword"},"in"),a(),n("span",{class:"token builtin"},"range"),n("span",{class:"token punctuation"},"("),a("n "),n("span",{class:"token operator"},"+"),a(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"]"),a(`
`),n("span",{class:"token keyword"},"for"),a(" i "),n("span",{class:"token keyword"},"in"),a(),n("span",{class:"token builtin"},"range"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),a(" n "),n("span",{class:"token operator"},"+"),a(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":"),a(`
    `),n("span",{class:"token keyword"},"for"),a(" j "),n("span",{class:"token keyword"},"in"),a(),n("span",{class:"token builtin"},"range"),n("span",{class:"token punctuation"},"("),a("w "),n("span",{class:"token operator"},"+"),a(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":"),a(`
        `),n("span",{class:"token keyword"},"if"),a(" j "),n("span",{class:"token operator"},">="),a(" weight"),n("span",{class:"token punctuation"},"["),a("i"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},":"),a(`
            dp`),n("span",{class:"token punctuation"},"["),a("i"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"["),a("j"),n("span",{class:"token punctuation"},"]"),a(),n("span",{class:"token operator"},"="),a(),n("span",{class:"token builtin"},"max"),n("span",{class:"token punctuation"},"("),a("dp"),n("span",{class:"token punctuation"},"["),a("i "),n("span",{class:"token operator"},"-"),a(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"["),a("j"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),a(" dp"),n("span",{class:"token punctuation"},"["),a("i"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"["),a("j "),n("span",{class:"token operator"},"-"),a(" weight"),n("span",{class:"token punctuation"},"["),a("i"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"]"),a(),n("span",{class:"token operator"},"+"),a(" value"),n("span",{class:"token punctuation"},"["),a("i"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),a(`
        `),n("span",{class:"token keyword"},"else"),n("span",{class:"token punctuation"},":"),a(`
            dp`),n("span",{class:"token punctuation"},"["),a("i"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"["),a("j"),n("span",{class:"token punctuation"},"]"),a(),n("span",{class:"token operator"},"="),a(" dp"),n("span",{class:"token punctuation"},"["),a("i "),n("span",{class:"token operator"},"-"),a(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"["),a("j"),n("span",{class:"token punctuation"},"]"),a(`
`)])])],-1),y=n("p",null,"有意思的是，使用滚动数组后和 0-1 背包两个表达式一致，只有遍历顺序相反。",-1),v=n("div",{class:"language-cpp","data-ext":"cpp"},[n("pre",{class:"language-cpp"},[n("code",null,[n("span",{class:"token keyword"},"for"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),a(" i "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),a(" i "),n("span",{class:"token operator"},"<="),a(" n"),n("span",{class:"token punctuation"},";"),a(" i"),n("span",{class:"token operator"},"++"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token keyword"},"for"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),a(" j "),n("span",{class:"token operator"},"="),a(" weight"),n("span",{class:"token punctuation"},"["),a("i"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),a(" j "),n("span",{class:"token operator"},"<="),a(" w"),n("span",{class:"token punctuation"},";"),a(" j"),n("span",{class:"token operator"},"++"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
        dp`),n("span",{class:"token punctuation"},"["),a("j"),n("span",{class:"token punctuation"},"]"),a(),n("span",{class:"token operator"},"="),a(),n("span",{class:"token function"},"max"),n("span",{class:"token punctuation"},"("),a("dp"),n("span",{class:"token punctuation"},"["),a("j"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),a(" dp"),n("span",{class:"token punctuation"},"["),a("j "),n("span",{class:"token operator"},"-"),a(" weight"),n("span",{class:"token punctuation"},"["),a("i"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"]"),a(),n("span",{class:"token operator"},"+"),a(" value"),n("span",{class:"token punctuation"},"["),a("i"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`
`)])])],-1),_=n("div",{class:"language-python","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[a("dp "),n("span",{class:"token operator"},"="),a(),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},"]"),a(),n("span",{class:"token operator"},"*"),a(),n("span",{class:"token punctuation"},"("),a("w "),n("span",{class:"token operator"},"+"),a(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token keyword"},"for"),a(" i "),n("span",{class:"token keyword"},"in"),a(),n("span",{class:"token builtin"},"range"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),a(" n "),n("span",{class:"token operator"},"+"),a(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":"),a(`
    `),n("span",{class:"token keyword"},"for"),a(" j "),n("span",{class:"token keyword"},"in"),a(),n("span",{class:"token builtin"},"range"),n("span",{class:"token punctuation"},"("),a("weight"),n("span",{class:"token punctuation"},"["),a("i"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),a(" w "),n("span",{class:"token operator"},"+"),a(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":"),a(`
        dp`),n("span",{class:"token punctuation"},"["),a("j"),n("span",{class:"token punctuation"},"]"),a(),n("span",{class:"token operator"},"="),a(),n("span",{class:"token builtin"},"max"),n("span",{class:"token punctuation"},"("),a("dp"),n("span",{class:"token punctuation"},"["),a("j"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),a(" dp"),n("span",{class:"token punctuation"},"["),a("j "),n("span",{class:"token operator"},"-"),a(" weight"),n("span",{class:"token punctuation"},"["),a("i"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"]"),a(),n("span",{class:"token operator"},"+"),a(" value"),n("span",{class:"token punctuation"},"["),a("i"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),a(`
`)])])],-1),j=l(`<h2 id="_2-模板总结" tabindex="-1"><a class="header-anchor" href="#_2-模板总结" aria-hidden="true">#</a> 2. 模板总结</h2><p>非滚动数组：</p><div class="language-c" data-ext="c"><pre class="language-c"><code><span class="token keyword">for</span> <span class="token number">1</span> <span class="token punctuation">.</span><span class="token punctuation">.</span> n
    <span class="token keyword">for</span> <span class="token number">0</span> <span class="token punctuation">.</span><span class="token punctuation">.</span> w
        dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">max</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">-</span> weight<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">+</span> value<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre></div><p>滚动数组</p><div class="language-c" data-ext="c"><pre class="language-c"><code><span class="token keyword">for</span> <span class="token number">1</span> <span class="token punctuation">.</span><span class="token punctuation">.</span> n
    <span class="token keyword">for</span> weight<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token punctuation">.</span><span class="token punctuation">.</span> w
        dp<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">max</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> dp<span class="token punctuation">[</span>j <span class="token operator">-</span> weight<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">+</span> value<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre></div><h2 id="_3-获取完全背包内的物品" tabindex="-1"><a class="header-anchor" href="#_3-获取完全背包内的物品" aria-hidden="true">#</a> 3. 获取完全背包内的物品</h2>`,6),f=n("div",{class:"language-cpp","data-ext":"cpp"},[n("pre",{class:"language-cpp"},[n("code",null,[n("span",{class:"token keyword"},"int"),a(" j "),n("span",{class:"token operator"},"="),a(" w"),n("span",{class:"token punctuation"},";"),a(`
`),n("span",{class:"token keyword"},"for"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),a(" i "),n("span",{class:"token operator"},"="),a(" n"),n("span",{class:"token punctuation"},";"),a(" i "),n("span",{class:"token operator"},">="),a(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),a(" i"),n("span",{class:"token operator"},"--"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token keyword"},"while"),a(),n("span",{class:"token punctuation"},"("),a("dp"),n("span",{class:"token punctuation"},"["),a("i"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"["),a("j"),n("span",{class:"token punctuation"},"]"),a(),n("span",{class:"token operator"},">"),a(" dp"),n("span",{class:"token punctuation"},"["),a("i "),n("span",{class:"token operator"},"-"),a(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"["),a("j"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
        cout `),n("span",{class:"token operator"},"<<"),a(" i "),n("span",{class:"token operator"},"<<"),a(),n("span",{class:"token string"},'" "'),n("span",{class:"token punctuation"},";"),a(`
        j `),n("span",{class:"token operator"},"-="),a(" weight"),n("span",{class:"token punctuation"},"["),a("i"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),a(`
    `),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`
`)])])],-1),M=n("div",{class:"language-python","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[a("j "),n("span",{class:"token operator"},"="),a(` w
`),n("span",{class:"token keyword"},"for"),a(" i "),n("span",{class:"token keyword"},"in"),a(),n("span",{class:"token builtin"},"range"),n("span",{class:"token punctuation"},"("),a("n"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":"),a(`
    `),n("span",{class:"token keyword"},"while"),a(" dp"),n("span",{class:"token punctuation"},"["),a("i"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"["),a("j"),n("span",{class:"token punctuation"},"]"),a(),n("span",{class:"token operator"},">"),a(" dp"),n("span",{class:"token punctuation"},"["),a("i "),n("span",{class:"token operator"},"-"),a(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"["),a("j"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},":"),a(`
        `),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),a("i"),n("span",{class:"token punctuation"},","),a(" end"),n("span",{class:"token operator"},"="),n("span",{class:"token string"},"' '"),n("span",{class:"token punctuation"},")"),a(`
        j `),n("span",{class:"token operator"},"-="),a(" weight"),n("span",{class:"token punctuation"},"["),a("i"),n("span",{class:"token punctuation"},"]"),a(`
`)])])],-1),L=n("p",null,[a("其实就是将 0-1 背包的 "),n("code",null,"if"),a(" 换成了 "),n("code",null,"while"),a("，因为每个物品可能被使用不止一次。")],-1);function A(N,V){const c=i("CodeTabs");return k(),r("div",null,[m,h,w,g,e(c,{id:"28",data:[{title:"cpp"},{title:"python"}],"tab-id":"code"},{tab0:s(({title:t,value:p,isActive:o})=>[x]),tab1:s(({title:t,value:p,isActive:o})=>[b]),_:1}),y,e(c,{id:"39",data:[{title:"cpp"},{title:"python"}],"tab-id":"code"},{tab0:s(({title:t,value:p,isActive:o})=>[v]),tab1:s(({title:t,value:p,isActive:o})=>[_]),_:1}),j,e(c,{id:"61",data:[{title:"cpp"},{title:"python"}],"tab-id":"code"},{tab0:s(({title:t,value:p,isActive:o})=>[f]),tab1:s(({title:t,value:p,isActive:o})=>[M]),_:1}),L])}const C=u(d,[["render",A],["__file","complete-backpack.html.vue"]]);export{C as default};
