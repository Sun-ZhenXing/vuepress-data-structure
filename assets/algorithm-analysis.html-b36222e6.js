import{_ as l,M as i,p,q as r,N as u,V as a,a1 as k,R as n,t as s}from"./framework-35149b8f.js";const d={},m=k('<h1 id="算法分析" tabindex="-1"><a class="header-anchor" href="#算法分析" aria-hidden="true">#</a> 算法分析</h1><div class="hint-container info"><p class="hint-container-title">这个专题使用什么语言？</p><p>如果没有特别说明，整个数据结构和算法专题将使用 Python 和 C++ 实现各种算法。原因如下：</p><ul><li>本文不会陷入使用哪种语言更好的争端，Java、Python 各有所爱，使用哪种语言取决于你自己</li><li>使用一门语言意味着片面，我们需要综合考虑，相互比较，这是一个有意思的过程</li><li>使用两门语言的文章读者会多于一门语言，而且这两种语言会覆盖多数读者</li><li>Python 相当简洁且优雅，对于快速实现算法，是脚本语言代表</li><li>C++ 是竞赛、教学、大型工程的主流语言</li></ul></div><h2 id="_1-算法分析的目标" tabindex="-1"><a class="header-anchor" href="#_1-算法分析的目标" aria-hidden="true">#</a> 1. 算法分析的目标</h2><p>本文的“算法分析”不仅仅指分析算法，也对一些数据结构操作进行探讨，为了比较哪些算法或数据结构是设计优秀、优雅的，我们需要使用一些分析算法的方法。</p><p>通常，我们可以使用时间来度量算法的性能。实际上，时间是一个良好的度量单位，因为计算机中最重要的资源是时间，进行一些大任务通常需要花费计算机很多时间。但是，计算机的运行时间是一个不准确的度量，因为算法的运行时间通常受到数据规模大小的影响，并且和计算机此时的运行状态、计算机的性能、操作系统、设计语言、CPU 架构和一些随机因素影响。</p><p>在相当多的场合下，这些也是一个算法能否应用到实际上需要考虑的内容，但是尽管有来自不同方面的干扰，我们最关注的还是算法有多大程度上受到数据规模的影响，并希望使用数学的方法进行理论分析，此时我们排除了真实情况的计算机执行情况。</p><h2 id="_2-实验结果" tabindex="-1"><a class="header-anchor" href="#_2-实验结果" aria-hidden="true">#</a> 2. 实验结果</h2><p>如果算法已经实现，那么在进行数学分析之前，我们可以进行实际运行来计算它到底进行了多长的时间。</p>',8),h=n("p",null,[s("下面的代码将计算 "),n("code",null,"for"),s(" 循环 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mn",null,"100000000")]),n("annotation",{encoding:"application/x-tex"},"100000000")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6444em"}}),n("span",{class:"mord"},"100000000")])])]),s(" 次所花费的秒数：")],-1),_=n("div",{class:"language-cpp line-numbers-mode","data-ext":"cpp"},[n("pre",{class:"language-cpp"},[n("code",null,[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),s(),n("span",{class:"token string"},"<ctime>")]),s(`
`),n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),s(),n("span",{class:"token string"},"<iostream>")]),s(`
`),n("span",{class:"token keyword"},"using"),s(),n("span",{class:"token keyword"},"namespace"),s(" std"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"int"),s(),n("span",{class:"token function"},"main"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    clock_t start`),n("span",{class:"token punctuation"},","),s(" finish"),n("span",{class:"token punctuation"},";"),s(`
    start `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"clock"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"for"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" i "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s(" i "),n("span",{class:"token operator"},"<"),s(),n("span",{class:"token number"},"100000000"),n("span",{class:"token punctuation"},";"),s(" i"),n("span",{class:"token operator"},"++"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"float"),s(" sec "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"float"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"clock"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"-"),s(" start"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"/"),s(" CLOCKS_PER_SEC"),n("span",{class:"token punctuation"},";"),s(`
    finish `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"clock"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    cout `),n("span",{class:"token operator"},"<<"),s(),n("span",{class:"token string"},'"time: "'),s(),n("span",{class:"token operator"},"<<"),s(" sec "),n("span",{class:"token operator"},"<<"),s(" endl"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token comment"},"// time: 0.219"),s(`
    `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),v=n("div",{class:"language-python","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[n("span",{class:"token keyword"},"from"),s(" time "),n("span",{class:"token keyword"},"import"),s(` time

start `),n("span",{class:"token operator"},"="),s(" time"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token keyword"},"for"),s(" i "),n("span",{class:"token keyword"},"in"),s(),n("span",{class:"token builtin"},"range"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"100000000"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":"),s(`
    `),n("span",{class:"token keyword"},"pass"),s(`
end `),n("span",{class:"token operator"},"="),s(" time"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),s("end "),n("span",{class:"token operator"},"-"),s(" start"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token comment"},"# 5.468473672866821"),s(`
`)])])],-1),b=n("p",null,"结果的差距是显而易见的。",-1),y=n("div",{class:"hint-container tip"},[n("p",{class:"hint-container-title"},"Python 代码性能测试"),n("p",null,[s("Python 的标准库中有专门进行算法时间测试的库 "),n("code",null,"timeit"),s("，"),n("code",null,"timeit"),s(" 会进行大量重复实验来消除随机性误差。")])],-1);function f(w,g){const t=i("CodeTabs");return p(),r("div",null,[m,h,u(t,{id:"56",data:[{title:"cpp"},{title:"python"}],"tab-id":"code"},{tab0:a(({title:e,value:o,isActive:c})=>[_]),tab1:a(({title:e,value:o,isActive:c})=>[v]),_:1}),b,y])}const C=l(d,[["render",f],["__file","algorithm-analysis.html.vue"]]);export{C as default};
